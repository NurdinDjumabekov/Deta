import React, { useEffect, useState } from "react";
import { useDispatch } from "react-redux";
import io from "socket.io-client"; // –ü–æ–¥–∫–ª—é—á–∞–µ–º socket.io-client
import Modals from "../Modals/Modals";

//// styles
import "./style.scss";
import { getLogBackUp } from "../../store/reducers/actionsContaiersSlice";

const url_socket = "https://dd-api.ibm.kg";

const LogsModal = ({ guid, setViewLog, viewLog }) => {
  const dispatch = useDispatch();
  const [logs, setLogs] = useState([]); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ª–æ–≥–æ–≤
  const [socket, setSocket] = useState(null); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–æ–∫–µ—Ç–∞

  useEffect(() => {
    if (!viewLog) return; // –ï—Å–ª–∏ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ, –Ω–µ –ø–æ–¥–∫–ª—é—á–∞–µ–º —Å–æ–∫–µ—Ç

    // 1. –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
    const newSocket = io(url_socket);
    setSocket(newSocket);

    const room = `vm-${guid}-backup`; // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è –∫–æ–º–Ω–∞—Ç—ã

    newSocket.emit("join_room", room); // –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ–º—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ

    // 2. –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    newSocket.on("backup_update", (data) => {
      console.log("üîÑ –õ–æ–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", data);
      setLogs((prevLogs) => [...prevLogs, data]); // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ª–æ–≥–∏ –≤ –º–∞—Å—Å–∏–≤
    });

    return () => {
      newSocket.emit("leave_room", room); // –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç –∫–æ–º–Ω–∞—Ç—ã
      newSocket.disconnect(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
      setSocket(null);
    };
  }, [viewLog]); // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ

  return (
    <div className="logsModal">
      <Modals
        openModal={viewLog}
        setOpenModal={() => setViewLog(false)}
        title="–õ–æ–≥ –±—ç–∫–∞–ø–æ–≤"
      >
        <div className="logsContainer">
          {logs.length > 0 ? (
            logs.map((log, index) => <p key={index}>{log.message}</p>)
          ) : (
            <p>–õ–æ–≥–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...</p>
          )}
        </div>
      </Modals>
    </div>
  );
};

export default LogsModal;
